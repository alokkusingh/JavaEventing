<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Fri Jan 28 19:03:32 CET 2011 -->
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>
EventManager
</TITLE>

<META NAME="date" CONTENT="2011-01-28">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="EventManager";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/EventManager.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../javaEventing/EventManager.Condition.html" title="interface in javaEventing"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?javaEventing/EventManager.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="EventManager.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
javaEventing</FONT>
<BR>
Class EventManager</H2>
<PRE>
java.lang.Object
  <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>javaEventing.EventManager</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>EventManager</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
This class should be used for subscribing to, and triggering events
 Copyright 2011  Espen Skjervold, FFI
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->

<A NAME="nested_class_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Nested Class Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;interface</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.Condition.html" title="interface in javaEventing">EventManager.Condition</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inherit this interface in order to define your own conditions.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;interface</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inherit this interface in order to define your own events
 Copyright 2011  Espen Skjervold, FFI</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.EventObject.html" title="class in javaEventing">EventManager.EventObject</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;When there is no need for different events, use the EventObject, a default implementation of the Event interface.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;interface</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.GenericEventListener.html" title="interface in javaEventing">EventManager.GenericEventListener</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Implement this interface to create an event listener.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../javaEventing/EventManager.html#EventManager()">EventManager</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.html#registerEventListener(javaEventing.EventManager.GenericEventListener, javaEventing.EventManager.Event)">registerEventListener</A></B>(<A HREF="../javaEventing/EventManager.GenericEventListener.html" title="interface in javaEventing">EventManager.GenericEventListener</A>&nbsp;receiver,
                      <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Registers an event listener, and binds it to a specific type of event.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.html#registerEventListener(javaEventing.EventManager.GenericEventListener, javaEventing.EventManager.Event, javaEventing.EventManager.Condition)">registerEventListener</A></B>(<A HREF="../javaEventing/EventManager.GenericEventListener.html" title="interface in javaEventing">EventManager.GenericEventListener</A>&nbsp;receiver,
                      <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event,
                      <A HREF="../javaEventing/EventManager.Condition.html" title="interface in javaEventing">EventManager.Condition</A>&nbsp;condition)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Registers an event listener, and binds it to a specific type of event and provides a condition.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.html#triggerEvent(java.lang.Object, javaEventing.EventManager.Event)">triggerEvent</A></B>(java.lang.Object&nbsp;sender,
             <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Triggers an event.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.html#triggerEvent(java.lang.Object, javaEventing.EventManager.Event, java.lang.Object)">triggerEvent</A></B>(java.lang.Object&nbsp;sender,
             <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event,
             java.lang.Object&nbsp;conditionalExpression)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Triggers an event.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.html#unregisterEventListener(javaEventing.EventManager.GenericEventListener, javaEventing.EventManager.Event)">unregisterEventListener</A></B>(<A HREF="../javaEventing/EventManager.GenericEventListener.html" title="interface in javaEventing">EventManager.GenericEventListener</A>&nbsp;receiver,
                        <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unregisters an event listener bound to an event</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.html#waitUntilTriggered(javaEventing.EventManager.Event, long)">waitUntilTriggered</A></B>(<A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event,
                   long&nbsp;timeout)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A blocking call, freezing the current thread execution until the event is triggered.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../javaEventing/EventManager.html#waitUntilTriggered(javaEventing.EventManager.Event, long, javaEventing.EventManager.Condition)">waitUntilTriggered</A></B>(<A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event,
                   long&nbsp;timeout,
                   <A HREF="../javaEventing/EventManager.Condition.html" title="interface in javaEventing">EventManager.Condition</A>&nbsp;condition)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A blocking call, freezing the current thread execution until the event is triggered.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="EventManager()"><!-- --></A><H3>
EventManager</H3>
<PRE>
public <B>EventManager</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="registerEventListener(javaEventing.EventManager.GenericEventListener, javaEventing.EventManager.Event)"><!-- --></A><H3>
registerEventListener</H3>
<PRE>
public static void <B>registerEventListener</B>(<A HREF="../javaEventing/EventManager.GenericEventListener.html" title="interface in javaEventing">EventManager.GenericEventListener</A>&nbsp;receiver,
                                         <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event)</PRE>
<DL>
<DD>Registers an event listener, and binds it to a specific type of event. Define your own types of events by creating classes imlement the Event interface.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>receiver</CODE> - The callback object that will be called once the event is triggered. This may typically be an anonymous implementation of the class.<DD><CODE>event</CODE> - An instance of the type of Event that is subscribed to. This does not need to be the same Event instance that is used to trigger the event,
        it may be another instance of the same Event type (the class inheriting the Event class).</DL>
</DD>
</DL>
<HR>

<A NAME="registerEventListener(javaEventing.EventManager.GenericEventListener, javaEventing.EventManager.Event, javaEventing.EventManager.Condition)"><!-- --></A><H3>
registerEventListener</H3>
<PRE>
public static void <B>registerEventListener</B>(<A HREF="../javaEventing/EventManager.GenericEventListener.html" title="interface in javaEventing">EventManager.GenericEventListener</A>&nbsp;receiver,
                                         <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event,
                                         <A HREF="../javaEventing/EventManager.Condition.html" title="interface in javaEventing">EventManager.Condition</A>&nbsp;condition)</PRE>
<DL>
<DD>Registers an event listener, and binds it to a specific type of event and provides a condition.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>receiver</CODE> - The callback object that will be called once the event is triggered. This may typically be an anonymous implementation of the class.<DD><CODE>event</CODE> - An instance of the type of Event that is subscribed to. This does not need to be the same Event instance that is used to trigger the event,
        it may be another instance of the same Event type (the class inheriting the Event class).<DD><CODE>condition</CODE> - A condition that must be true for the EventListener to be called.</DL>
</DD>
</DL>
<HR>

<A NAME="unregisterEventListener(javaEventing.EventManager.GenericEventListener, javaEventing.EventManager.Event)"><!-- --></A><H3>
unregisterEventListener</H3>
<PRE>
public static void <B>unregisterEventListener</B>(<A HREF="../javaEventing/EventManager.GenericEventListener.html" title="interface in javaEventing">EventManager.GenericEventListener</A>&nbsp;receiver,
                                           <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event)</PRE>
<DL>
<DD>Unregisters an event listener bound to an event
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>receiver</CODE> - The EventListener registered for a particular event.<DD><CODE>event</CODE> - </DL>
</DD>
</DL>
<HR>

<A NAME="waitUntilTriggered(javaEventing.EventManager.Event, long)"><!-- --></A><H3>
waitUntilTriggered</H3>
<PRE>
public static boolean <B>waitUntilTriggered</B>(<A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event,
                                         long&nbsp;timeout)</PRE>
<DL>
<DD>A blocking call, freezing the current thread execution until the event is triggered. May be used for thread synchronization.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>event</CODE> - An instance of the type of Event that is subscribed to. This does not need to be the same Event instance that is used to trigger the event,
        it may be another instance of the same Event type (the class inheriting the Event class).<DD><CODE>timeout</CODE> - The number of milliseconds before the blocking call will resume regardless of whether the event was triggered or not. If zero, it will never time out.</DL>
</DD>
</DL>
<HR>

<A NAME="waitUntilTriggered(javaEventing.EventManager.Event, long, javaEventing.EventManager.Condition)"><!-- --></A><H3>
waitUntilTriggered</H3>
<PRE>
public static boolean <B>waitUntilTriggered</B>(<A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event,
                                         long&nbsp;timeout,
                                         <A HREF="../javaEventing/EventManager.Condition.html" title="interface in javaEventing">EventManager.Condition</A>&nbsp;condition)</PRE>
<DL>
<DD>A blocking call, freezing the current thread execution until the event is triggered. May be used for thread synchronization.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>event</CODE> - An instance of the type of Event that is subscribed to. This does not need to be the same Event instance that is used to trigger the event,
        it may be another instance of the same Event type (the class inheriting the Event class).<DD><CODE>timeout</CODE> - The number of milliseconds before the blocking call will resume regardless of whether the event was triggered or not. If zero, it will never time out.<DD><CODE>condition</CODE> - A condition that must be true for the call to unblock.</DL>
</DD>
</DL>
<HR>

<A NAME="triggerEvent(java.lang.Object, javaEventing.EventManager.Event)"><!-- --></A><H3>
triggerEvent</H3>
<PRE>
public static void <B>triggerEvent</B>(java.lang.Object&nbsp;sender,
                                <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event)</PRE>
<DL>
<DD>Triggers an event.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sender</CODE> - The object instance triggering the event.<DD><CODE>event</CODE> - An instance of the type of Event that is triggered.</DL>
</DD>
</DL>
<HR>

<A NAME="triggerEvent(java.lang.Object, javaEventing.EventManager.Event, java.lang.Object)"><!-- --></A><H3>
triggerEvent</H3>
<PRE>
public static void <B>triggerEvent</B>(java.lang.Object&nbsp;sender,
                                <A HREF="../javaEventing/EventManager.Event.html" title="interface in javaEventing">EventManager.Event</A>&nbsp;event,
                                java.lang.Object&nbsp;conditionalExpression)</PRE>
<DL>
<DD>Triggers an event.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sender</CODE> - The object instance triggering the event.<DD><CODE>event</CODE> - An instance of the type of Event that is triggered.<DD><CODE>conditionalExpression</CODE> - An object of any type. Will be checked by any event listeners providing Condition-objects.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/EventManager.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../javaEventing/EventManager.Condition.html" title="interface in javaEventing"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?javaEventing/EventManager.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="EventManager.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
